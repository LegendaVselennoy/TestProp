openapi: 3.0.3
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /product/{id}:
    put:
      tags:
        - product-controller
      operationId: updateProduct
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Product"
    delete:
      tags:
        - product-controller
      operationId: deleteProduct
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
  /product:
    get:
      tags:
        - product-controller
      operationId: findAllProducts
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
    post:
      tags:
        - product-controller
      operationId: save
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Product"
  /product/{status}:
    get:
      tags:
        - product-controller
      operationId: getProductsByStatus
      parameters:
        - name: status
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
  /product/sum/{status}:
    get:
      tags:
        - product-controller
      operationId: sumListStatus
      parameters:
        - name: status
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: number
  /product/sellable:
    get:
      tags:
        - product-controller
      operationId: getProductsSumWhereStatusSellable
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: number
  /product/one/{id}:
    get:
      tags:
        - product-controller
      operationId: getProduct
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Product"
components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int64
        productId:
          type: string
        status:
          type: string
        fulfilmentCenter:
          type: string
        qty:
          type: integer
          format: int32
        productValue:
          type: number